{"version":3,"sources":["component/BookGrid.jsx","component/SearchBar.jsx","store/reducer.js","store/index.js","component/AddBookPage.jsx","App.js","index.js"],"names":["Column","Table","ColumnGroup","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinishFailed","errorInfo","console","log","BookGrid","this","props","getBook","dataSource","bookInLocalStorage","title","dataIndex","render","record","size","onClick","deleteBook","BookId","showModal","visible","isModalVisible","onCancel","closeModal","footer","name","fields","targetBook","onFinish","val","submitForm","Item","label","disabled","rules","required","message","format","type","htmlType","Component","connect","state","Bookdata","dispatch","axios","post","then","res","action","data","catch","err","value","delete","BookBoughtDate","put","Search","Input","SearchBar","inputValue","placeholder","enterButton","onSearch","handleSearch","onChange","handleChange","e","target","defaultState","isAddModalVisable","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","sort","a","b","filter","item","BookName","includes","fieldData","i","length","moment","applyMiddleware","thunk","AddBookPage","showAddModal","block","closeAddModal","addBook","hidden","Header","Layout","Content","Footer","App","style","background","color","fontSize","ReactDOM","document","getElementById"],"mappings":"uUAKQA,EAAwBC,IAAxBD,OAAQE,EAAgBD,IAAhBC,YAGVC,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGhBE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KAIJI,EAAiB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,IAGxB,I,IAEKG,E,uKAEJ,WACEC,KAAKC,MAAMC,Y,oBAGb,WAAU,IAAD,OACP,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAOC,WAAYH,KAAKC,MAAMG,mBAA9B,UACE,eAAChB,EAAD,CAAaiB,MAAM,OAAnB,UACE,cAACnB,EAAD,CACEmB,MAAM,2BACNC,UAAU,UACN,UACN,cAACpB,EAAD,CACEmB,MAAM,2BACNC,UAAU,gBACN,gBACN,cAACpB,EAAD,CACEmB,MAAM,eACNC,UAAU,YACN,YACN,cAACpB,EAAD,CACEmB,MAAM,eACNC,UAAU,cACN,cAEN,cAACpB,EAAD,CACEmB,MAAM,2BACNC,UAAU,kBACN,kBACN,cAACpB,EAAD,CACEmB,MAAM,qBACNC,UAAU,iBACN,oBAER,eAAClB,EAAD,CAAaiB,MAAM,SAAnB,UACE,cAACnB,EAAD,CACEmB,MAAM,SAENE,OAAQ,SAACC,GAAD,OACN,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,IAAD,CAAQC,QAAS,WAAQ,EAAKT,MAAMU,WAAWH,EAAOI,SAAtD,wBAHA,UAON,cAAC1B,EAAD,CACEmB,MAAM,SAENE,OAAQ,SAACC,GAAD,OACN,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,IAAD,CAAQC,QAAS,WAAQ,EAAKT,MAAMY,UAAUL,EAAOI,SAArD,wBAHA,gBAUV,cAAC,IAAD,CACEP,MAAM,cACNS,QAASd,KAAKC,MAAMc,eACpBC,SAAUhB,KAAKC,MAAMgB,WACrBC,OAAQ,KAJV,SAME,eAAC,IAAD,yBACEC,KAAK,cACD9B,GAFN,IAGE+B,OAAQpB,KAAKC,MAAMoB,WACnBC,SAAU,SAACC,GAAU,EAAKtB,MAAMuB,WAAWD,IAC3C5B,eAAgBA,EALlB,UAOE,cAAC,IAAK8B,KAAN,CACEC,MAAM,2BACNP,KAAK,SAFP,SAIE,cAAC,IAAD,CAAOQ,UAAU,MAGnB,cAAC,IAAKF,KAAN,CACEC,MAAM,eACNP,KAAK,WACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAHrC,SAKE,cAAC,IAAD,MAGF,cAAC,IAAKL,KAAN,CACEC,MAAM,eACNP,KAAK,aACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAHrC,SAKE,cAAC,IAAD,MAGF,cAAC,IAAKL,KAAN,CACEC,MAAM,2BACNP,KAAK,iBACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,wCAHrC,SAKE,cAAC,IAAD,CAAYC,OAAQ,iBAItB,cAAC,IAAKN,KAAN,CACEC,MAAM,2BACNP,KAAK,eACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,cAAC,IAAD,MAGF,cAAC,IAAKL,KAAN,CACEC,MAAM,qBACNP,KAAK,gBACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAHrC,SAKE,cAAC,IAAD,MAEF,cAAC,IAAKL,KAAN,2BAAehC,GAAf,aACE,cAAC,IAAD,CAAQuC,KAAK,UAAUC,SAAS,SAAhC,oC,GAxHSC,aAiMRC,eA5DS,SAACC,GACvB,MAAO,CACLC,SAAUD,EAAMC,SAChBjC,mBAAoBgC,EAAMhC,mBAC1BW,eAAgBqB,EAAMrB,eACtBM,WAAYe,EAAMf,eAII,SAACiB,GACzB,MAAO,CACLpC,QADK,WAEHqC,IAAMC,KAAK,8BACRC,MAAK,SAACC,GACL,IAAMC,EAAS,CACbC,KAAMF,EAAIE,KACVZ,KAAM,eAERM,EAASK,MAEVE,OAAM,SAACC,GACNjD,QAAQC,IAAIgD,OAGlBnC,WAdK,SAcMoC,GAAQ,IAAD,OAChBR,IAAMS,OAAN,uCAA6CD,IAC1CN,MAAK,SAACC,GACL,EAAKxC,cAGXW,UApBK,SAoBKkC,GAKRT,EAJe,CACbN,KAAM,YACNe,WAIJ9B,WA3BK,WA+BHqB,EAHe,CACbN,KAAM,gBAIVR,WAjCK,SAiCMuB,GACTA,EAAME,eAAiBF,EAAME,eAAelB,OAAO,cACnDQ,IAAMW,IAAI,+BAAgCH,GACvCN,MAAK,WACJF,IAAMC,KAAK,8BACRC,MAAK,SAACC,GACL,IAAMC,EAAS,CACbC,KAAMF,EAAIE,KACVZ,KAAM,cAERM,EAASK,aAORR,CAA4CpC,GCvNnDoD,EAAWC,IAAXD,OAEFE,E,4JAEF,WAAU,IAAD,OACL,OACI,cAACF,EAAD,CAAQJ,MAAO/C,KAAKC,MAAMqD,WACtBC,YAAY,oBACZC,YAAY,SACZ/C,KAAK,QACLgD,SAAU,WAAO,EAAKxD,MAAMyD,aAAa,EAAKzD,MAAMqD,aACpDK,SAAU3D,KAAKC,MAAM2D,mB,GATb1B,aAuCTC,eAxBS,SAACC,GACrB,MAAO,CACHkB,WAAYlB,EAAMkB,eAIA,SAAChB,GACvB,MAAO,CACHsB,aADG,SACUC,GACT,IAAMlB,EAAS,CACXX,KAAM,eACNe,MAAOc,EAAEC,OAAOf,OAEpBT,EAASK,IAEbe,aARG,WAYCpB,EAHe,CACXN,KAAM,qBAOPG,CAA4CkB,G,0BC3CrDU,EAAe,CACjB1B,SAAU,GACViB,WAAY,GACZlD,mBAAoB,GACpBW,gBAAgB,EAChBiD,mBAAmB,EACnB3C,WAAY,CAAC,CACT,KAAQ,CACJ,UAEJ,MAAS,IACV,CACC,KAAQ,CACJ,YAEJ,MAAS,IACV,CACC,KAAQ,CACJ,cAEJ,MAAS,IACV,CACC,KAAQ,CACJ,kBAEJ,MAAS,IACV,CACC,KAAQ,CACJ,gBAEJ,MAAS,IACV,CACC,KAAQ,CACJ,iBAEJ,MAAS,M,SCjCX4C,EAAmBC,OAAOC,sCAAwCC,IAMzDC,EAJDC,aDqCC,WAAmC,IAAlClC,EAAiC,uDAAzB2B,EAAcpB,EAAW,uCAC7C,GAAoB,gBAAhBA,EAAOX,KAIP,OAHAW,EAAOC,KAAK2B,MAAK,SAACC,EAAGC,GACjB,OAAOD,EAAE5D,OAAS6D,EAAE7D,UAEjB,2BACAwB,GADP,IAEIC,SAAUM,EAAOC,KACjBxC,mBAAoBuC,EAAOC,OAGnC,GAAoB,iBAAhBD,EAAOX,KACP,OAAO,2BACAI,GADP,IAEIkB,WAAYX,EAAOI,QAG3B,GAAoB,iBAAhBJ,EAAOX,KAAyB,CAChC,IAAMY,EAAOR,EAAMC,SAASqC,QAAO,SAACC,GAChC,OAAOA,EAAKC,SAASC,SAASzC,EAAMkB,eAExC,OAAO,2BACAlB,GADP,IAEIhC,mBAAoBwC,IAG5B,GAAoB,cAAhBD,EAAOX,KAAsB,CAmC7B,IAlCA,IAAM8C,EAAY,CAAC,CACf,KAAQ,CACJ,UAEJ,MAAS,IACV,CACC,KAAQ,CACJ,YAEJ,MAAS,IACV,CACC,KAAQ,CACJ,cAEJ,MAAS,IACV,CACC,KAAQ,CACJ,kBAEJ,MAAS,IACV,CACC,KAAQ,CACJ,gBAEJ,MAAS,IACV,CACC,KAAQ,CACJ,iBAEJ,MAAS,KAEPzD,EAAae,EAAMhC,mBAAmBsE,QAAO,SAACC,GAChD,OAAOA,EAAK/D,SAAW+B,EAAOI,SAEzBgC,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IACL,mBAAzBD,EAAUC,GAAG5D,KAAK,GAClB2D,EAAUC,GAAGhC,MAAQkC,IAAO5D,EAAW,GAAGyD,EAAUC,GAAG5D,KAAK,IAAK,cAEjE2D,EAAUC,GAAGhC,MAAQ1B,EAAW,GAAGyD,EAAUC,GAAG5D,KAAK,IAEzDtB,QAAQC,IAAIgF,EAAUC,GAAG5D,MAG7B,OAAO,2BACAiB,GADP,IAEIrB,gBAAgB,EAChBM,WAAYyD,IAGpB,MAAoB,eAAhBnC,EAAOX,MACPW,EAAOC,KAAK2B,MAAK,SAACC,EAAGC,GACjB,OAAOD,EAAE5D,OAAS6D,EAAE7D,UAEjB,2BACAwB,GADP,IAEIC,SAAUM,EAAOC,KACjBxC,mBAAoBuC,EAAOC,KAC3B7B,gBAAgB,KAGJ,eAAhB4B,EAAOX,KACA,2BACAI,GADP,IAEIrB,gBAAgB,IAGJ,iBAAhB4B,EAAOX,KACA,2BACAI,GADP,IAEI4B,mBAAmB,IAGP,kBAAhBrB,EAAOX,KACA,2BACAI,GADP,IAEI4B,mBAAmB,IAGP,YAAhBrB,EAAOX,MACPW,EAAOC,KAAK2B,MAAK,SAACC,EAAGC,GACjB,OAAOD,EAAE5D,OAAS6D,EAAE7D,UAExBf,QAAQC,IAAI6C,EAAOC,MACZ,2BACAR,GADP,IAEIC,SAAUM,EAAOC,KACjBxC,mBAAoBuC,EAAOC,KAC3BoB,mBAAmB,KAGpB5B,IC1JwB6B,EAC/BiB,YAAgBC,OCFd9F,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGlBE,EAAa,CACfD,WAAY,CACRE,OAAQ,EACRH,KAAM,KAIR6F,E,4JACF,WAAU,IAAD,OACL,OACI,eAAC,WAAD,WACI,cAAC,IAAD,CAAQ1E,QAASV,KAAKC,MAAMoF,aAAcrD,KAAK,UAAUsD,OAAK,EAA9D,sBAGA,cAAC,IAAD,CAAOxE,QAASd,KAAKC,MAAM+D,kBAAmB3D,MAAM,WAAWa,OAAQ,KAAMF,SAAUhB,KAAKC,MAAMsF,cAAlG,SACI,eAAC,IAAD,yBACIpE,KAAK,cACD9B,GAFR,IAGIiC,SAAU,SAACC,GACPA,EAAIX,OAAS,EAAKX,MAAMoC,SAAS,EAAKpC,MAAMoC,SAAS2C,OAAS,GAAGpE,OAAS,EAC1E,EAAKX,MAAMuF,QAAQjE,IAL3B,UAQI,cAAC,IAAKE,KAAN,CACIC,MAAM,2BACNP,KAAK,SACLsE,QAAQ,EAHZ,SAKI,cAAC,IAAD,CAAO9D,UAAU,MAGrB,cAAC,IAAKF,KAAN,CACIC,MAAM,eACNP,KAAK,WACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAHvC,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKL,KAAN,CACIC,MAAM,eACNP,KAAK,aACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAHvC,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKL,KAAN,CACIC,MAAM,2BACNP,KAAK,iBACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,wCAHvC,SAKI,cAAC,IAAD,CAAYC,OAAQ,iBAGxB,cAAC,IAAKN,KAAN,CACIC,MAAM,2BACNP,KAAK,eACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHvC,SAKI,cAAC,IAAD,MAGJ,cAAC,IAAKL,KAAN,CACIC,MAAM,qBACNP,KAAK,gBACLS,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAHvC,SAKI,cAAC,IAAD,MAEJ,cAAC,IAAKL,KAAN,2BAAehC,GAAf,aACI,cAAC,IAAD,CAAQuC,KAAK,UAAUC,SAAS,SAAhC,oC,GAhEFC,aAiHXC,eAtCS,SAACC,GACrB,MAAO,CACH4B,kBAAmB5B,EAAM4B,kBACzB3B,SAAUD,EAAMC,aAIG,SAACC,GACxB,MAAO,CACH+C,aADG,WAKC/C,EAHe,CACXN,KAAM,kBAIduD,cAPG,WAWCjD,EAHe,CACXN,KAAM,mBAIdwD,QAbG,SAaKzC,GACJA,EAAME,eAAiBF,EAAME,eAAelB,OAAO,cACnDQ,IAAMC,KAAK,+BAAgCO,GAC1CN,MAAK,WACFF,IAAMC,KAAK,8BACVC,MAAK,SAACC,GACH,IAAMC,EAAS,CACXX,KAAM,UACNY,KAAMF,EAAIE,MAEdN,EAASK,aAOdR,CAA6CiD,GC1HpDM,EAA4BC,IAA5BD,OAAgBE,GAAYD,IAApBE,OAAoBF,IAAZC,SAiBTE,MAff,WACE,OACE,cAAC,IAAD,CAAUzB,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAACqB,EAAD,CAAQK,MAAO,CAACC,WAAY,UAAWC,MAAO,QAASC,SAAU,IAAjE,4BACA,cAAC,EAAD,IACA,eAACN,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,a,OCZVO,IAAS5F,OACL,cAAC,EAAD,IACF6F,SAASC,eAAe,W","file":"static/js/main.bb2d1e71.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Form, Input, Table, Space, Button, Modal, DatePicker } from 'antd';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst { Column, ColumnGroup } = Table;\n\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log('Failed:', errorInfo);\n};\n\n<Form />;\n\nclass BookGrid extends Component {\n\n  componentDidMount() {\n    this.props.getBook();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Table dataSource={this.props.bookInLocalStorage}>\n          <ColumnGroup title=\"Book\">\n            <Column\n              title='書籍編號'\n              dataIndex='BookId'\n              key='BookId' />\n            <Column\n              title='書籍種類'\n              dataIndex='BookCategory'\n              key='BookCategory' />\n            <Column\n              title='書名'\n              dataIndex='BookName'\n              key='BookName' />\n            <Column\n              title='作者'\n              dataIndex='BookAuthor'\n              key='BookAuthor'\n            />\n            <Column\n              title='購書日期'\n              dataIndex='BookBoughtDate'\n              key='BookBoughtDate' />\n            <Column\n              title='出版社'\n              dataIndex='BookPublisher'\n              key='BookPublisher' />\n          </ColumnGroup>\n          <ColumnGroup title=\"Action\">\n            <Column\n              title=\"Delete\"\n              key=\"delete\"\n              render={(record) => (\n                <Space size=\"middle\">\n                  <Button onClick={() => { this.props.deleteBook(record.BookId) }}>Delete</Button>\n                </Space>\n              )}>\n            </Column>\n            <Column\n              title=\"Modify\"\n              key=\"modify\"\n              render={(record) => (\n                <Space size=\"middle\">\n                  <Button onClick={() => { this.props.showModal(record.BookId) }}>Modify</Button>\n                </Space>\n              )}>\n            </Column>\n          </ColumnGroup>\n        </Table>\n\n        <Modal\n          title=\"Modify Page\"\n          visible={this.props.isModalVisible}\n          onCancel={this.props.closeModal}\n          footer={null}\n        >\n          <Form\n            name=\"modifyForm\"\n            {...layout}\n            fields={this.props.targetBook}\n            onFinish={(val) => { this.props.submitForm(val) }}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"書籍編號\"\n              name=\"BookId\"\n            >\n              <Input disabled={true} />\n            </Form.Item>\n\n            <Form.Item\n              label=\"書名\"\n              name=\"BookName\"\n              rules={[{ required: true, message: 'Please input your book name!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"作者\"\n              name=\"BookAuthor\"\n              rules={[{ required: true, message: 'Please input your book author!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"購書日期\"\n              name=\"BookBoughtDate\"\n              rules={[{ required: true, message: 'Please input your book bought date!' }]}\n            >\n              <DatePicker format={\"YYYY-MM-DD\"} ></DatePicker>\n              {/* <Input></Input> */}\n            </Form.Item>\n\n            <Form.Item\n              label=\"書籍種類\"\n              name=\"BookCategory\"\n              rules={[{ required: true, message: 'Please input book category!' }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"出版社\"\n              name=\"BookPublisher\"\n              rules={[{ required: true, message: 'Please input book publisher!' }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </Fragment>\n    );\n\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    Bookdata: state.Bookdata,\n    bookInLocalStorage: state.bookInLocalStorage,\n    isModalVisible: state.isModalVisible,\n    targetBook: state.targetBook\n  }\n}\n\nconst mapDispatchToPops = (dispatch) => {\n  return {\n    getBook() {\n      axios.post(\"http://localhost:3001/read\")\n        .then((res) => {\n          const action = {\n            data: res.data,\n            type: \"getBookData\",\n          }\n          dispatch(action);\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n    },\n    deleteBook(value) {\n      axios.delete(`http://localhost:3001/delete/${value}`)\n        .then((res) => {\n          this.getBook();\n        })\n    },\n    showModal(value) {\n      const action = {\n        type: \"showModal\",\n        value\n      }\n      dispatch(action);\n    },\n    closeModal() {\n      const action = {\n        type: \"closeModal\",\n      }\n      dispatch(action);\n    },\n    submitForm(value) {\n      value.BookBoughtDate = value.BookBoughtDate.format(\"YYYY-MM-DD\");\n      axios.put(\"http://localhost:3001/modify\", value)\n        .then(() => {\n          axios.post(\"http://localhost:3001/read\")\n            .then((res) => {\n              const action = {\n                data: res.data,\n                type: \"submitForm\",\n              }\n              dispatch(action);\n            })\n        })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToPops)(BookGrid);\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { connect } from 'react-redux';\n\nconst { Search } = Input;\n\nclass SearchBar extends Component {\n\n    render() {\n        return (\n            <Search value={this.props.inputValue}\n                placeholder=\"input search text\"\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={() => {this.props.handleSearch(this.props.inputValue)}}\n                onChange={this.props.handleChange}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        inputValue: state.inputValue,\n    }\n}\n\nconst mapDispatchToPops = (dispatch) => {\n    return {\n        handleChange(e) {\n            const action = {\n                type: 'handleChange',\n                value: e.target.value\n            }\n            dispatch(action);\n        },\n        handleSearch() {\n            const action = {\n                type: 'handleSearch',\n            }\n            dispatch(action);\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToPops)(SearchBar);","import moment from \"moment\";\n\nconst defaultState = {\n    Bookdata: [],\n    inputValue: \"\",\n    bookInLocalStorage: [],\n    isModalVisible: false,\n    isAddModalVisable: false,\n    targetBook: [{\n        \"name\": [\n            \"BookId\"\n        ],\n        \"value\": \"\"\n    }, {\n        \"name\": [\n            \"BookName\"\n        ],\n        \"value\": \"\"\n    }, {\n        \"name\": [\n            \"BookAuthor\"\n        ],\n        \"value\": \"\"\n    }, {\n        \"name\": [\n            \"BookBoughtDate\"\n        ],\n        \"value\": \"\"\n    }, {\n        \"name\": [\n            \"BookCategory\"\n        ],\n        \"value\": \"\"\n    }, {\n        \"name\": [\n            \"BookPublisher\"\n        ],\n        \"value\": \"\"\n    }],\n}\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = defaultState, action) => {\n    if (action.type === \"getBookData\") {\n        action.data.sort((a, b) => {\n            return a.BookId - b.BookId;\n        });\n        return {\n            ...state,\n            Bookdata: action.data,\n            bookInLocalStorage: action.data\n        }\n    }\n    if (action.type === 'handleChange') {\n        return {\n            ...state,\n            inputValue: action.value,\n        }\n    }\n    if (action.type === 'handleSearch') {\n        const data = state.Bookdata.filter((item) => {\n            return item.BookName.includes(state.inputValue);\n        })\n        return {\n            ...state,\n            bookInLocalStorage: data,\n        }\n    }\n    if (action.type === 'showModal') {\n        const fieldData = [{\n            \"name\": [\n                \"BookId\"\n            ],\n            \"value\": \"\"\n        }, {\n            \"name\": [\n                \"BookName\"\n            ],\n            \"value\": \"\"\n        }, {\n            \"name\": [\n                \"BookAuthor\"\n            ],\n            \"value\": \"\"\n        }, {\n            \"name\": [\n                \"BookBoughtDate\"\n            ],\n            \"value\": \"\"\n        }, {\n            \"name\": [\n                \"BookCategory\"\n            ],\n            \"value\": \"\"\n        }, {\n            \"name\": [\n                \"BookPublisher\"\n            ],\n            \"value\": \"\"\n        }]\n        const targetBook = state.bookInLocalStorage.filter((item) => {\n            return item.BookId === action.value;\n        })\n        for (let i = 0; i < fieldData.length; i++) {\n            if (fieldData[i].name[0] === \"BookBoughtDate\") {\n                fieldData[i].value = moment(targetBook[0][fieldData[i].name[0]], \"YYYY-MM-DD\");\n            } else {\n                fieldData[i].value = targetBook[0][fieldData[i].name[0]];\n            }\n            console.log(fieldData[i].name)\n\n        }\n        return {\n            ...state,\n            isModalVisible: true,\n            targetBook: fieldData,\n        }\n    }\n    if (action.type === 'submitForm') {\n        action.data.sort((a, b) => {\n            return a.BookId - b.BookId;\n        });\n        return {\n            ...state,\n            Bookdata: action.data,\n            bookInLocalStorage: action.data,\n            isModalVisible: false,\n        }\n    }\n    if (action.type === 'closeModal') {\n        return {\n            ...state,\n            isModalVisible: false,\n        }\n    }\n    if (action.type === \"showAddModal\") {\n        return {\n            ...state,\n            isAddModalVisable: true,\n        }\n    }\n    if (action.type === \"closeAddModal\") {\n        return {\n            ...state,\n            isAddModalVisable: false,\n        }\n    }\n    if (action.type === \"addBook\") {\n        action.data.sort((a, b) => {\n            return a.BookId - b.BookId;\n        });\n        console.log(action.data);\n        return {\n            ...state,\n            Bookdata: action.data,\n            bookInLocalStorage: action.data,\n            isAddModalVisable: false,\n        }\n    }\n    return state;\n}","import { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from './reducer'\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import React, { Component, Fragment } from 'react'\nimport { Form, Button, Input, Modal, DatePicker } from 'antd';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst layout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 16 },\n};\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nclass AddBookPage extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Button onClick={this.props.showAddModal} type=\"primary\" block>\n                    Add Book\n                </Button>\n                <Modal visible={this.props.isAddModalVisable} title=\"Add Book\" footer={null} onCancel={this.props.closeAddModal}>\n                    <Form\n                        name=\"modifyForm\"\n                        {...layout}\n                        onFinish={(val) => { \n                            val.BookId = this.props.Bookdata[this.props.Bookdata.length - 1].BookId + 1;\n                            this.props.addBook(val) \n                        }}\n                    >\n                        <Form.Item\n                            label=\"書籍編號\"\n                            name=\"BookId\"\n                            hidden={true}\n                        >\n                            <Input disabled={true}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"書名\"\n                            name=\"BookName\"\n                            rules={[{ required: true, message: 'Please input your book name!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"作者\"\n                            name=\"BookAuthor\"\n                            rules={[{ required: true, message: 'Please input your book author!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"購書日期\"\n                            name=\"BookBoughtDate\"\n                            rules={[{ required: true, message: 'Please input your book bought date!' }]}\n                        >\n                            <DatePicker format={\"YYYY-MM-DD\"} ></DatePicker>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"書籍種類\"\n                            name=\"BookCategory\"\n                            rules={[{ required: true, message: 'Please input book category!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"出版社\"\n                            name=\"BookPublisher\"\n                            rules={[{ required: true, message: 'Please input book publisher!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAddModalVisable: state.isAddModalVisable,\n        Bookdata: state.Bookdata\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        showAddModal() {\n            const action = {\n                type: \"showAddModal\",\n            }\n            dispatch(action);\n        },\n        closeAddModal() {\n            const action = {\n                type: \"closeAddModal\",\n            }\n            dispatch(action);\n        },\n        addBook(value) {\n            value.BookBoughtDate = value.BookBoughtDate.format(\"YYYY-MM-DD\");\n            axios.post(\"http://localhost:3001/insert\", value)\n            .then(() => {\n                axios.post(\"http://localhost:3001/read\")\n                .then((res) => {\n                    const action = {\n                        type: \"addBook\",\n                        data: res.data,\n                    }\n                    dispatch(action);\n                })\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBookPage);","import { Fragment } from 'react';\nimport { Layout } from 'antd';\nimport BookGrid from './component/BookGrid';\nimport SearchBar from './component/SearchBar';\nimport store from \"./store/index\";\nimport { Provider } from 'react-redux';\nimport AddBookPage from './component/AddBookPage';\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Layout>\n        <Header style={{background: \"#3b5998\", color: \"white\", fontSize: 25}}>Library System</Header>\n        <AddBookPage></AddBookPage>\n        <Content>\n          <SearchBar></SearchBar>\n          <BookGrid></BookGrid>\n        </Content>\n      </Layout>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}